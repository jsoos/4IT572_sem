name: Build and test eshop workflow

on:
  workflow_dispatch:
  push: 

jobs:
  Install:
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v2.5.0
        with:
          token: ${{ secrets.WORKFLOW_TOKEN_SEM  }}

      - name: Setup NodeJS
        uses: actions/setup-node@v3.5.1
        with:
          node-version: 10

      - name: Cache node modules
        uses: actions/cache@v3.0.11
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: node_modules-

      - name: Install packages with npm
        run: |
          npm ci

  Build:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v2.5.0
        with:
          token: ${{ secrets.WORKFLOW_TOKEN_SEM  }}

      - name: Setup NodeJS
        uses: actions/setup-node@v3.5.1
        with:
          node-version: 10

      - name: Cache node modules
        uses: actions/cache@v3.0.11
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Build
        run: |
          npm rebuild node-sass --force
          npm run build -- --colors

      - name: Cache node modules and build folder
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/cache@v3.0.11
        with: 
          path: |
            ~/.npm
            ./node_modules
            ./build
          key: ${{ runner.os }}-build-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-build-${{ github.run_id }}

  Test:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v2.5.0
        with:
          token: ${{ secrets.WORKFLOW_TOKEN_SEM  }}

      - name: Setup NodeJS
        uses: actions/setup-node@v3.5.1
        with:
          node-version: 10

      - name: Cache node modules
        uses: actions/cache@v3.0.11
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Run tests
        run: |
          npm run test -- --colors

  Deploy:
    needs: [Build, Test]
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1                   # set this to your preferred AWS region, e.g. us-west-1
      ECR_REPOSITORY: MY_ECR_REPOSITORY           # set this to your Amazon ECR repository name
      ECS_SERVICE: MY_ECS_SERVICE                 # set this to your Amazon ECS service name
      ECS_CLUSTER: MY_ECS_CLUSTER                 # set this to your Amazon ECS cluster name
      ECS_TASK_DEFINITION: MY_ECS_TASK_DEFINITION # set this to the path to your Amazon ECS task definition
                                                  # file, e.g. .aws/task-definition.json
      CONTAINER_NAME: MY_CONTAINER_NAME           # set this to the name of the container in the
                                                  # containerDefinitions section of your task definition
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}